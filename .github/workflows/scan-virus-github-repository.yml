name: "Scan Virus - GitHub Repository"
on:
  schedule:
    - cron: "0 */8 * * *"
  workflow_dispatch:
    inputs:
      repositories:
        type: "string"
        description: "{String[]} GitHub repositories."
        required: false
jobs:
  resolve-repositories:
    name: "(Resolve Repositories)"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Setup PowerShell Toolkit"
        uses: "hugoalh-studio/setup-powershell-toolkit-ghaction@v1.2.3"
      - name: "Resolve Repositories"
        id: "resolve-repositories"
        run: |
          Import-Module -Name 'hugoalh.GitHubActionsToolkit' -Scope 'Local'
          [String]$RepositoriesInput = '${{github.event.inputs.repositories}}'
          If ($RepositoriesInput.Length -eq 0) {
            [String[]]$Repositories = @()
            For ([UInt64]$Page = 1; $Page -le 3; $Page += 1) {
              [PSCustomObject[]]$Response = Invoke-WebRequest -Uri "https://api.github.com/events?page=$($Page)&per_page=100" -Headers @{
                'Content-Type' = 'application/vnd.github+json'
                'X-GitHub-Api-Version' = '2022-11-28'
              } -MaximumRedirection 1 -MaximumRetryCount 5 -RetryIntervalSec 10 -Method 'Get' -SkipHeaderValidation |
                Select-Object -ExpandProperty 'Content' |
                ConvertFrom-Json -Depth 100
              ForEach ($Repository In $Response.repo.name) {
                If ($Repository -inotin $Repositories) {
                  $Repositories += $Repository
                }
              }
            }
          }
          Else {
            [String[]]$Repositories = $RepositoriesInput -isplit ',|;' |
              ForEach-Object -Process { $_.Trim() } |
              Where-Object -FilterScript { $_.Length -gt 0 }
          }
          Set-GitHubActionsOutput -Name 'repositories' -Value (
            $Repositories |
              Get-Random -Count 250 |
              Sort-Object -Unique |
              ConvertTo-Json -Depth 100 -Compress
          )
        shell: "pwsh"
    outputs:
      group: "${{steps.resolve-repositories.outputs.repositories}}"
  main:
    name: "${{matrix.group}}"
    needs:
      - "resolve-repositories"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        group: "${{fromJson(needs.resolve-repositories.outputs.group)}}"
      # max-parallel: 4
      fail-fast: false
    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v3.5.2"
        with:
          repository: "${{matrix.group}}"
          token: "${{secrets.GHP_SCANVIRUSCLONEREPOSITORY}}"
          fetch-depth: 0
      - name: "Scan Virus"
        uses: "hugoalh/scan-virus-ghaction/clamav@v0.14.0"
        with:
          git_integrate: "True"
          git_limit: "30"
          ignores: |-
            - Path: "^\\.git\\/"
              Symbol: ".+"
          log_elements: "OnlyCurrent"
