name: "Scan Virus - GitHub Repository"
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:
    inputs:
      repositories:
        type: "string"
        description: "{String[]} GitHub repositories."
        required: false
jobs:
  resolve-repositories:
    name: "(Resolve Repositories)"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Setup PowerShell Toolkit"
        uses: "hugoalh-studio/setup-powershell-toolkit-ghaction@v1.3.0"
      - name: "Get Database Key"
        id: "database-key"
        run: |
          Import-Module -Name 'hugoalh.GitHubActionsToolkit' -Scope 'Local'
          Set-GitHubActionsOutput -Name 'key' -Value "rdb-$((
            Get-Date -AsUTC |
              ConvertTo-Json
          ) -ireplace '\.\d+Z$', 'Z')"
        shell: "pwsh"
      - name: "Restore Database"
        id: "database-restore"
        uses: "actions/cache/restore@v3.3.1"
        with:
          key: "${{steps.database-key.outputs.key}}"
          path: |
            ${{github.workspace}}
          restore-keys: |
            rdb-
      - name: "Resolve Repositories"
        id: "resolve-repositories"
        run: |
          Import-Module -Name 'hugoalh.GitHubActionsToolkit' -Scope 'Local'
          [Hashtable]$Rdb = @{}
          [Int16]$MatrixMaximum = 250
          [DateTime]$TimeStampCurrent = Get-Date -AsUTC
          [DateTime]$TimeStampBuffer = $TimeStampCurrent.AddDays(-7)
          [String]$RdbFilePath = Join-Path -Path $Env:GITHUB_WORKSPACE -ChildPath 'rdb.json'
          If (Test-Path -LiteralPath $RdbFilePath) {
            $Rdb = Get-Content -LiteralPath $RdbFilePath -Raw -Encoding 'UTF8NoBOM' |
              ConvertFrom-Json -Depth 100 -AsHashtable -ErrorAction 'Continue'
          }
          [String]$RepositoriesInput = '${{github.event.inputs.repositories}}'
          [String[]]$RepositoriesRaw = @()
          If ($RepositoriesInput.Length -eq 0) {
            For ([UInt64]$Page = 1; $Page -le 3; $Page += 1) {
              [PSCustomObject[]]$Response = Invoke-WebRequest -Uri "https://api.github.com/events?page=$($Page)&per_page=100" -Headers @{
                'Content-Type' = 'application/vnd.github+json'
                'X-GitHub-Api-Version' = '2022-11-28'
              } -MaximumRedirection 1 -MaximumRetryCount 2 -RetryIntervalSec 5 -Method 'Get' |
                Select-Object -ExpandProperty 'Content' |
                ConvertFrom-Json -Depth 100
              $RepositoriesRaw += $Response.repo.name
            }
          }
          Else {
            $RepositoriesRaw += $RepositoriesInput -isplit ',|;' |
              ForEach-Object -Process { $_.Trim() } |
              Where-Object -FilterScript { $_.Length -gt 0 }
          }
          [String[]]$Repositories = $RepositoriesRaw |
            Where-Object -FilterScript { $_ -inotmatch '^hugoalh(?:-studio)?\/' } |
            Select-Object -Unique |
            Where-Object -FilterScript {
              !$Rdb.ContainsKey($_) -or
              ($Rdb.ContainsKey($_) -and $Rdb.($_) -lt $TimeStampBuffer )
            } |
            Get-Random -Count $MatrixMaximum
          If ($Repositories.Count -lt $MatrixMaximum) {
            $Repositories += $Rdb.GetEnumerator() |
              Where-Object -FilterScript { $_.Name -inotin $Repositories -and $_.Value -lt $TimeStampBuffer } |
              Get-Random -Count ($MatrixMaximum - $Repositories.Count) -ErrorAction 'SilentlyContinue'
          }
          ForEach ($Repository In $Repositories) {
            $Rdb.($Repository) = $TimeStampCurrent
          }
          $Rdb |
            ConvertTo-Json -Depth 100 -Compress |
            Set-Content -LiteralPath $RdbFilePath -Encoding 'UTF8NoBOM' -ErrorAction 'Continue'
          Set-GitHubActionsOutput -Name 'repositories' -Value (
            $Repositories |
              ConvertTo-Json -Depth 100 -Compress
          )
        shell: "pwsh"
      - name: "Save Database"
        uses: "actions/cache/save@v3.3.1"
        with:
          key: "${{steps.database-key.outputs.key}}"
          path: |
            ${{github.workspace}}
        continue-on-error: true
    outputs:
      group: "${{steps.resolve-repositories.outputs.repositories}}"
  main:
    name: "${{matrix.group}}"
    needs:
      - "resolve-repositories"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        group: "${{fromJson(needs.resolve-repositories.outputs.group)}}"
      fail-fast: false
    steps:
      - name: "Optimize Disk Space"
        uses: "hugoalh/disk-space-optimizer-ghaction@v0.4.0"
        with:
          operate_async: "True"
          general_include: ".+"
          general_exclude: |-
            ^AzCopy$
            ^Azure
            ^Go$
            ^RunnerBoost$
          dockerimage_include: ".+"
          dockerimage_exclude: |-
            ^ghcr\.io/hugoalh/scan-virus-ghaction
          cache_apt: "True"
          cache_homebrew: "True"
          cache_npm: "True"
      - name: "Checkout Repository"
        uses: "actions/checkout@v3.5.3"
        with:
          repository: "${{matrix.group}}"
          token: "${{secrets.GHP_SCANVIRUSCLONEREPOSITORY}}"
          fetch-depth: 0
      - name: "Scan Virus"
        uses: "hugoalh/scan-virus-ghaction/clamav@v0.16.1"
        with:
          git_integrate: "True"
          git_limit: "30"
          ignores: |-
            - Path: "^\\.git\\/"
              Symbol: ".+"
          log_elements: "OnlyCurrent"
